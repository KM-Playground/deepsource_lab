name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read
  actions: read
  checks: write
  id-token: write  # Required to get the OIDC token
  pull-requests: write  # Required for reviewdog to comment on PRs

jobs:
  test-and-coverage:
    name: Test and Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.sha }}
        fetch-depth: 0  # Fetch full history for diff-cover to compare against base branch

    - name: Set up JDK 8
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build and run tests with coverage
      run: mvn clean test jacoco:report jacoco:report-aggregate -pl coverage-report -am -ntp

    - name: Publish test report
      uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5 # v1
      if: always()
      with:
        name: Maven Test Results
        path: '**/target/surefire-reports/*.xml'
        reporter: java-junit
        fail-on-error: false

    - name: Setup Python
      if: github.event_name == 'pull_request'
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
      with:
        python-version: '3.12'

    - name: Convert JaCoCo to Cobertura format
      if: github.event_name == 'pull_request'
      run: |
        chmod +x .github/scripts/cover2cover.py
        # Find all src/main/java directories dynamically
        SOURCE_DIRS=$(find . -type d -path "*/src/main/java" | tr '\n' ' ')
        .github/scripts/cover2cover.py coverage-report/target/site/jacoco-aggregate/jacoco.xml $SOURCE_DIRS > coverage-report/target/site/jacoco-aggregate/cobertura.xml

    - name: Run diff-cover and generate report
      if: github.event_name == 'pull_request'
      run: |
        pip install diff-cover
        # Get the base branch for comparison
        BASE_BRANCH="${{ github.event.pull_request.base.ref }}"

        # Run diff-cover to generate a report showing coverage only for changed lines
        diff-cover coverage-report/target/site/jacoco-aggregate/cobertura.xml \
          --compare-branch=origin/$BASE_BRANCH \
          --json-report diff-cover.json \
          --markdown-report diff-cover.md \
          --fail-under=0
      continue-on-error: true

    - name: Setup reviewdog
      if: github.event_name == 'pull_request'
      uses: reviewdog/action-setup@3f401fe1d58fe77e10d665ab713057375e39b887 # v1
      with:
        reviewdog_version: latest

    - name: Convert diff-cover JSON to reviewdog format and post comments
      if: github.event_name == 'pull_request'
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Make script executable
        chmod +x .github/scripts/diff-cover-to-reviewdog.py

        # Run the script and pipe output to reviewdog
        .github/scripts/diff-cover-to-reviewdog.py | reviewdog -f=rdjson -name="diff-cover" -reporter=github-pr-review -filter-mode=nofilter -fail-on-error=false

    - name: Report results to DeepSource
      run: |
        # Install deepsource CLI
        curl https://deepsource.io/cli | sh

        # From the root directory, run the report coverage command
        ./bin/deepsource report --analyzer=test-coverage --key=java --value-file=coverage-report/target/site/jacoco-aggregate/jacoco.xml --use-oidc